<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.vcloud.qa.dao.VcloudClientQsSceneInfoDAO">
  <resultMap id="BaseResultMap" type="com.netease.vcloud.qa.model.VcloudClientQsSceneDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="qs_id" jdbcType="BIGINT" property="qsId" />
    <result column="cid" jdbcType="VARCHAR" property="cid" />
    <result column="is_run" jdbcType="TINYINT" property="isRun" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_update, qs_id, cid, is_run
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vcloud_client_qs_scene_info
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="queryAutoQsSceneInfo" resultMap="BaseResultMap">
    select
    *
    from vcloud_client_qs_scene_info
    where #{startTime} &lt; gmt_create and gmt_create &lt; #{endTime}
  </select>

  <select id="queryAutoRandQsSceneInfo" resultMap="BaseResultMap">
    select
    *
    from vcloud_client_qs_scene_info
    where #{startTime} &lt; gmt_create and gmt_create &lt; #{endTime}
    ORDER BY RAND() LIMIT #{randNum};
  </select>

  <select id="queryAutoQsSceneCount" resultType="java.lang.Integer">
    select
    count(*)
    from vcloud_client_qs_scene_info
    where
    qs_id=#{qsId} and
    #{startTime} &lt; gmt_create and gmt_create &lt; #{endTime}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vcloud_client_qs_scene_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.netease.vcloud.qa.model.VcloudClientQsSceneDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_qs_scene_info (gmt_create, gmt_update, qs_id, 
      cid, is_run)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}, #{qsId,jdbcType=BIGINT}, 
      #{cid,jdbcType=VARCHAR}, #{isRun,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.netease.vcloud.qa.model.VcloudClientQsSceneDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_qs_scene_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="qsId != null">
        qs_id,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="isRun != null">
        is_run,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="qsId != null">
        #{qsId,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=VARCHAR},
      </if>
      <if test="isRun != null">
        #{isRun,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.netease.vcloud.qa.model.VcloudClientQsSceneDO">
    update vcloud_client_qs_scene_info
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="qsId != null">
        qs_id = #{qsId,jdbcType=BIGINT},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=VARCHAR},
      </if>
      <if test="isRun != null">
        is_run = #{isRun,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netease.vcloud.qa.model.VcloudClientQsSceneDO">
    update vcloud_client_qs_scene_info
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      qs_id = #{qsId,jdbcType=BIGINT},
      cid = #{cid,jdbcType=VARCHAR},
      is_run = #{isRun,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>