<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.vcloud.qa.dao.VcloudClientQsTaskInfoDAO">
  <resultMap id="BaseResultMap" type="com.netease.vcloud.qa.model.VcloudClientQsTaskDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="git_info" jdbcType="VARCHAR" property="gitInfo" />
    <result column="git_branch" jdbcType="VARCHAR" property="gitBranch" />
    <result column="device_type" jdbcType="TINYINT" property="deviceType" />
    <result column="device_info" jdbcType="CHAR" property="deviceInfo" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="private_id" jdbcType="CHAR" property="privateId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="qs_app_id" jdbcType="BIGINT" property="qsAppId" />
    <result column="sample_num" jdbcType="INTEGER" property="sampleNum" />
    <result column="typical_scene_num" jdbcType="INTEGER" property="typicalSceneNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_update, task_name, git_info, git_branch, device_type, device_info, 
    operator, private_id, project_id, start_time, end_time, qs_app_id, sample_num, typical_scene_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vcloud_client_qs_task_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vcloud_client_qs_task_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.netease.vcloud.qa.model.VcloudClientQsTaskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_qs_task_info (gmt_create, gmt_update, task_name, 
      git_info, git_branch, device_type, 
      device_info, operator, private_id, 
      project_id, start_time, end_time, 
      qs_app_id, sample_num, typical_scene_num
      )
    values (now(),now(), #{taskName,jdbcType=VARCHAR},
      #{gitInfo,jdbcType=VARCHAR}, #{gitBranch,jdbcType=VARCHAR}, #{deviceType,jdbcType=TINYINT}, 
      #{deviceInfo,jdbcType=CHAR}, #{operator,jdbcType=VARCHAR}, #{privateId,jdbcType=CHAR}, 
      #{projectId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{qsAppId,jdbcType=BIGINT}, #{sampleNum,jdbcType=INTEGER}, #{typicalSceneNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.netease.vcloud.qa.model.VcloudClientQsTaskDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_qs_task_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="gitInfo != null">
        git_info,
      </if>
      <if test="gitBranch != null">
        git_branch,
      </if>
      <if test="deviceType != null">
        device_type,
      </if>
      <if test="deviceInfo != null">
        device_info,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="privateId != null">
        private_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="qsAppId != null">
        qs_app_id,
      </if>
      <if test="sampleNum != null">
        sample_num,
      </if>
      <if test="typicalSceneNum != null">
        typical_scene_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="gitInfo != null">
        #{gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="gitBranch != null">
        #{gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="deviceInfo != null">
        #{deviceInfo,jdbcType=CHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="privateId != null">
        #{privateId,jdbcType=CHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qsAppId != null">
        #{qsAppId,jdbcType=BIGINT},
      </if>
      <if test="sampleNum != null">
        #{sampleNum,jdbcType=INTEGER},
      </if>
      <if test="typicalSceneNum != null">
        #{typicalSceneNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update vcloud_client_qs_task_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.gitInfo != null">
        git_info = #{record.gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.gitBranch != null">
        git_branch = #{record.gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null">
        device_type = #{record.deviceType,jdbcType=TINYINT},
      </if>
      <if test="record.deviceInfo != null">
        device_info = #{record.deviceInfo,jdbcType=CHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.privateId != null">
        private_id = #{record.privateId,jdbcType=CHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.qsAppId != null">
        qs_app_id = #{record.qsAppId,jdbcType=BIGINT},
      </if>
      <if test="record.sampleNum != null">
        sample_num = #{record.sampleNum,jdbcType=INTEGER},
      </if>
      <if test="record.typicalSceneNum != null">
        typical_scene_num = #{record.typicalSceneNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vcloud_client_qs_task_info
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      git_info = #{record.gitInfo,jdbcType=VARCHAR},
      git_branch = #{record.gitBranch,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=TINYINT},
      device_info = #{record.deviceInfo,jdbcType=CHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      private_id = #{record.privateId,jdbcType=CHAR},
      project_id = #{record.projectId,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      qs_app_id = #{record.qsAppId,jdbcType=BIGINT},
      sample_num = #{record.sampleNum,jdbcType=INTEGER},
      typical_scene_num = #{record.typicalSceneNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netease.vcloud.qa.model.VcloudClientQsTaskDO">
    update vcloud_client_qs_task_info
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="gitInfo != null">
        git_info = #{gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="gitBranch != null">
        git_branch = #{gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null">
        device_type = #{deviceType,jdbcType=TINYINT},
      </if>
      <if test="deviceInfo != null">
        device_info = #{deviceInfo,jdbcType=CHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="privateId != null">
        private_id = #{privateId,jdbcType=CHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="qsAppId != null">
        qs_app_id = #{qsAppId,jdbcType=BIGINT},
      </if>
      <if test="sampleNum != null">
        sample_num = #{sampleNum,jdbcType=INTEGER},
      </if>
      <if test="typicalSceneNum != null">
        typical_scene_num = #{typicalSceneNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netease.vcloud.qa.model.VcloudClientQsTaskDO">
    update vcloud_client_qs_task_info
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{taskName,jdbcType=VARCHAR},
      git_info = #{gitInfo,jdbcType=VARCHAR},
      git_branch = #{gitBranch,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=TINYINT},
      device_info = #{deviceInfo,jdbcType=CHAR},
      operator = #{operator,jdbcType=VARCHAR},
      private_id = #{privateId,jdbcType=CHAR},
      project_id = #{projectId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      qs_app_id = #{qsAppId,jdbcType=BIGINT},
      sample_num = #{sampleNum,jdbcType=INTEGER},
      typical_scene_num = #{typicalSceneNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="queryAutoTaskInfo" resultMap="BaseResultMap">
    select
    *
    from vcloud_client_qs_task_info
    where 1=1
    <if test="owner!=null and owner != ''">
      and operator = #{owner}
    </if>
    ORDER BY id desc
    LIMIT #{start}, #{size}
  </select>

  <select id="queryAutoTaskInfoCount" resultType="java.lang.Integer">
    SELECT count(1)
    FROM vcloud_client_qs_task_info
    WHERE 1=1
    <if test="owner!=null and owner != ''">
      AND operator = #{owner}
    </if>
  </select>
</mapper>