<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.vcloud.qa.dao.VcloudClientScheduledTaskInfoDAO">
  <resultMap id="BaseResultMap" type="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_update" jdbcType="TIMESTAMP" property="gmtUpdate" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="git_info" jdbcType="VARCHAR" property="gitInfo" />
    <result column="git_branch" jdbcType="VARCHAR" property="gitBranch" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="private_id" jdbcType="CHAR" property="privateId" />
    <result column="task_status" jdbcType="TINYINT" property="taskStatus" />
    <result column="cron" jdbcType="VARCHAR" property="cron" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    <result column="script_ids" jdbcType="LONGVARCHAR" property="scriptIds" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_update, task_name, git_info, git_branch, operator, private_id, 
    task_status, cron
  </sql>
  <sql id="Blob_Column_List">
    script_ids
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vcloud_client_scheduled_task_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryAutoTaskRunInfo" resultMap="ResultMapWithBLOBs">
    select
    *
    from vcloud_client_scheduled_task_info
    where task_status = #{status}
    and gmt_update &lt; #{curTime}
    <if test="timeDiff!=null">
      and ABS(TIME_TO_SEC(TIMEDIFF(gmt_update, #{curTime}))) > 60
    </if>
    LIMIT 1
  </select>
  <select id="queryAutoTaskInfo" resultMap="ResultMapWithBLOBs">
    select
    *
    from vcloud_client_scheduled_task_info
    where 1=1
    <if test="owner!=null and owner != ''">
       and operator = #{owner}
    </if>
    ORDER BY id desc
    LIMIT #{start}, #{size}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vcloud_client_scheduled_task_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_scheduled_task_info (gmt_create, gmt_update, task_name, 
      git_info, git_branch, operator, 
      private_id, task_status, cron, 
      script_ids)
    values (now(), #{gmtUpdate,jdbcType=TIMESTAMP}, #{taskName,jdbcType=VARCHAR},
      #{gitInfo,jdbcType=VARCHAR}, #{gitBranch,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{privateId,jdbcType=CHAR}, #{taskStatus,jdbcType=TINYINT}, #{cron,jdbcType=VARCHAR}, 
      #{scriptIds,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into vcloud_client_scheduled_task_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="gitInfo != null">
        git_info,
      </if>
      <if test="gitBranch != null">
        git_branch,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="privateId != null">
        private_id,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="cron != null">
        cron,
      </if>
      <if test="scriptIds != null">
        script_ids,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="gitInfo != null">
        #{gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="gitBranch != null">
        #{gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="privateId != null">
        #{privateId,jdbcType=CHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=TINYINT},
      </if>
      <if test="cron != null">
        #{cron,jdbcType=VARCHAR},
      </if>
      <if test="scriptIds != null">
        #{scriptIds,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update vcloud_client_scheduled_task_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdate != null">
        gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskName != null">
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.gitInfo != null">
        git_info = #{record.gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.gitBranch != null">
        git_branch = #{record.gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.privateId != null">
        private_id = #{record.privateId,jdbcType=CHAR},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=TINYINT},
      </if>
      <if test="record.cron != null">
        cron = #{record.cron,jdbcType=VARCHAR},
      </if>
      <if test="record.scriptIds != null">
        script_ids = #{record.scriptIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update vcloud_client_scheduled_task_info
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      git_info = #{record.gitInfo,jdbcType=VARCHAR},
      git_branch = #{record.gitBranch,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      private_id = #{record.privateId,jdbcType=CHAR},
      task_status = #{record.taskStatus,jdbcType=TINYINT},
      cron = #{record.cron,jdbcType=VARCHAR},
      script_ids = #{record.scriptIds,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vcloud_client_scheduled_task_info
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{record.gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      git_info = #{record.gitInfo,jdbcType=VARCHAR},
      git_branch = #{record.gitBranch,jdbcType=VARCHAR},
      operator = #{record.operator,jdbcType=VARCHAR},
      private_id = #{record.privateId,jdbcType=CHAR},
      task_status = #{record.taskStatus,jdbcType=TINYINT},
      cron = #{record.cron,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    update vcloud_client_scheduled_task_info
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="gitInfo != null">
        git_info = #{gitInfo,jdbcType=VARCHAR},
      </if>
      <if test="gitBranch != null">
        git_branch = #{gitBranch,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="privateId != null">
        private_id = #{privateId,jdbcType=CHAR},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=TINYINT},
      </if>
      <if test="cron != null">
        cron = #{cron,jdbcType=VARCHAR},
      </if>
      <if test="scriptIds != null">
        script_ids = #{scriptIds,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    update vcloud_client_scheduled_task_info
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{taskName,jdbcType=VARCHAR},
      git_info = #{gitInfo,jdbcType=VARCHAR},
      git_branch = #{gitBranch,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      private_id = #{privateId,jdbcType=CHAR},
      task_status = #{taskStatus,jdbcType=TINYINT},
      cron = #{cron,jdbcType=VARCHAR},
      script_ids = #{scriptIds,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.netease.vcloud.qa.model.VcloudClientScheduledTaskInfoDO">
    update vcloud_client_scheduled_task_info
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      task_name = #{taskName,jdbcType=VARCHAR},
      git_info = #{gitInfo,jdbcType=VARCHAR},
      git_branch = #{gitBranch,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      private_id = #{privateId,jdbcType=CHAR},
      task_status = #{taskStatus,jdbcType=TINYINT},
      cron = #{cron,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>